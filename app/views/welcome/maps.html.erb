
    <p></p>
    <h2 class = "lead">Match with tutors in your local area.</h2>

  <br />
  <input id="autocomplete" placeholder="Enter a city" type="text"> &nbsp;or
  <button class= 'btn' id = 'useloc'>Use My Location</button>
  <br />
  <label for="Search radius"> Set radius:</label>
  <input type="range" id = "setRadiusSlider" name = "Search radius" min = "0.5" max = "50"  value = "2" step = "0.5">
  <input type="text" id = "setRadiusTextKm" name = "Search radius (text/km)" min = "0.5" max = "50">
  <label for="Search radius (text/km)"> km</label>
   &nbsp; &#47;
    <input type="text" id = "setRadiusTextMi" name = "Search radius (text/mi)" min = "0.5" max = "50">
  <label for="Search radius (text/mi)"> mi</label>

  <div id="map"></div>
 <script>
      // Note: This example requires that you consent to location sharing when
      // prompted by your browser. If you see the error "The Geolocation service
      // failed.", it means you probably did not give permission for the browser to
      // locate you.
    var map, places, infoWindow;
     var autocomplete;
     var circle;
       // Try HTML5 geolocation.
       $('#useloc').click(function() {
           getLocationGeo();
      });
      function initMap() {
        map = new google.maps.Map(document.getElementById('map'), {
          center: {lat: 54.8, lng: -4.6},
          zoom: 5,
          maxZoom: 14
        });
         circle = new google.maps.Circle({
            strokeColor: '#FAB22D',
            strokeOpacity: 0.8,
            strokeWeight: 2,
            fillColor: '#FCFF70',
            fillOpacity: 0.25,
            map: map,
            center: map.getCenter(),
            radius: 10000,
            visible:false
          });
        infoWindow = new google.maps.InfoWindow;
    // Create the autocomplete object and associate it with the UI input control.
        // Restrict the search to the default country, and to place type "cities".
        autocomplete = new google.maps.places.Autocomplete(
            /** @type {!HTMLInputElement} */ (
                document.getElementById('autocomplete')), {
              types: ['(cities)'],
              componentRestrictions: countryRestrict
            });
        places = new google.maps.places.PlacesService(map);

        autocomplete.addListener('place_changed', onPlaceChanged);

    var icon = {
    url: "<%= asset_path('beelogo.png') %>",
    scaledSize: new google.maps.Size(50, 50)// scaled size

};
var marker = new google.maps.Marker({
    position: {lat: 51.243781, lng: -0.589525},
    map: map,
    title: 'Bob',
    icon: icon
  });

  marker.addListener('click', function() {
      infoWindow.setContent('<h4 class="name">Bob</h4>'+ '<img src = "https://cdn.ebaumsworld.com/2020/01/13/022201/86172798/lego-star-wars-profile-99.jpg" />'+
                            '<h5 class = "languages"> Teaches French, English </h2>'+
                            '<h6 class = "tutorDescription"> Salut! I\'m Bob and I love baguettes. Here\'s some really exciting stuff about me blah blah blah blah</h6>'+
                            '<button class = "btn pickTutor"> <a href = "custom/url">Request This Tutor </a> </button>'
);
      infoWindow.maxWidth = 20;
    infoWindow.open(map, marker);
  });
         var marker2 = new google.maps.Marker({
    position: {lat: 51.238716, lng: -0.579532},
    map: map,
    title: 'Jane',
    icon: icon
  });

  marker2.addListener('click', function() {
      infoWindow.setContent('<h4 class="name">Jane</h4>'+ '<img src = "https://i.stack.imgur.com/34AD2.jpg" />'+
                            '<h5 class = "languages"> Teaches Spanish </h2>'+
                            '<h6 class = "tutorDescription"> Some information about me to convince you I\'m the right tutor for the job. Having a picture and some information about a potential tutor is likely to make users feel more comfortable picking a tutor, because they know what they\'re expecting.  </h6>'+
                            '<button class = "btn pickTutor"> <a href = "tutoring/request">Request This Tutor </a> </button>'
);
      infoWindow.maxWidth = 20;
    infoWindow.open(map, marker2);
  });


      }

     function getLocationGeo(){

      if (navigator.geolocation) {
          navigator.geolocation.getCurrentPosition(function(position) {
            var pos = {
              lat: position.coords.latitude,
              lng: position.coords.longitude
            };
              initMap();

            map.setCenter(pos);
            map.setZoom(13);
            circle.setCenter(map.getCenter());
            circle.setRadius(2000);
            circle.setVisible(true);
          }, function() {
            handleLocationError(true, infoWindow, map.getCenter());

          });
        } else {
          // Browser doesn't support Geolocation
          handleLocationError(false, infoWindow, map.getCenter());
        }


      function handleLocationError(browserHasGeolocation, infoWindow, pos) {
        infoWindow.setPosition(pos);
        infoWindow.setContent(browserHasGeolocation ?
                              '<h4>Error: The Geolocation service failed. Ensure you are using a HTTPS connection</h4>' :
                              '<h4>Error: Your browser doesn\'t support geolocation.</h4>');
        infoWindow.open(map);
      }
     };

    var countryRestrict = {'country': 'uk'};


      // When the user selects a city, get the place details for the city and
      // zoom the map in on the city.
      function onPlaceChanged() {
        var place = autocomplete.getPlace();
        if (place.geometry) {
          map.panTo(place.geometry.location);
          map.setZoom(13);
          circle.setCenter(map.getCenter());
          circle.setRadius(2000);
          circle.setVisible(true);

        } else {
          document.getElementById('autocomplete').placeholder = 'Enter a city';
        }
      }
   //radius slider code
     var slider = document.getElementById("setRadiusSlider");
     var textKm =  document.getElementById("setRadiusTextKm");
     var textMi =  document.getElementById("setRadiusTextMi");
     textKm.value = slider.value;
     textMi.value = Math.round((textKm.value/1.609)*10)/10;

     slider.oninput = function(){
         textKm.value = this.value;
         textMi.value = Math.round((this.value/1.609)*10)/10;
         circle.setCenter(map.getCenter());
         circle.setRadius(this.value*1000);

     }
     textKm.oninput = function(){
         slider.value = this.value;
         textMi.value = Math.round((this.value/1.609)*10)/10;
         circle.setCenter(map.getCenter());
         circle.setRadius(this.value*1000);
     }
      textMi.oninput = function(){
         slider.value = Math.round((this.value*1.609)*10)/10;
         textKm.value = Math.round((this.value*1.609)*10)/10;
         circle.setCenter(map.getCenter());
         circle.setRadius(this.value*1609);
     }
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDN7VGKV5VcNNsh5bgwx1TCK-iOpK1k-6c&libraries=places&callback=initMap"
        async defer></script>
